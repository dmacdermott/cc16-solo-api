[{"/Users/work/Code Chrysalis/cc16-solo-api/react-front/src/reportWebVitals.js":"1","/Users/work/Code Chrysalis/cc16-solo-api/react-front/src/App.js":"2","/Users/work/Code Chrysalis/cc16-solo-api/react-front/src/components/Stats.jsx":"3"},{"size":362,"mtime":1606550221391,"results":"4","hashOfConfig":"5"},{"size":685,"mtime":1606571539154,"results":"6","hashOfConfig":"5"},{"size":3102,"mtime":1606571835791,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"g99tur",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/work/Code Chrysalis/cc16-solo-api/react-front/src/reportWebVitals.js",[],["15","16"],"/Users/work/Code Chrysalis/cc16-solo-api/react-front/src/App.js",[],"/Users/work/Code Chrysalis/cc16-solo-api/react-front/src/components/Stats.jsx",["17"],{"ruleId":"18","replacedBy":"19"},{"ruleId":"20","replacedBy":"21"},{"ruleId":"22","severity":1,"message":"23","line":46,"column":26,"nodeType":"24","endLine":46,"endColumn":27},"no-native-reassign",["25"],"no-negated-in-lhs",["26"],"react-hooks/exhaustive-deps","Assignments to the 'toDo' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","no-global-assign","no-unsafe-negation"]